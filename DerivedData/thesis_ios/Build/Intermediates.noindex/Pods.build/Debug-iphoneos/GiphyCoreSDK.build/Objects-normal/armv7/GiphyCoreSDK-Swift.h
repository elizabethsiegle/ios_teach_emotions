// Generated by Apple Swift version 4.1 (swiftlang-902.0.48 clang-902.0.37.1)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import ObjectiveC;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="GiphyCoreSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


/// GIPHY Abstract API Client.
SWIFT_CLASS("_TtC12GiphyCoreSDK17GPHAbstractClient")
@interface GPHAbstractClient : NSObject
/// Default timeout for network requests. Default: 10 seconds.
@property (nonatomic) NSTimeInterval timeout;
/// Network reachability status. Not supported in watchOS.
@property (nonatomic) BOOL useReachability;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class NSCoder;

/// Represents Giphy Categories & Subcategories
SWIFT_CLASS("_TtC12GiphyCoreSDK11GPHCategory")
@interface GPHCategory : NSObject <NSCoding>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHCategory (SWIFT_EXTENSION(GiphyCoreSDK))
- (void)addSubCategory:(GPHCategory * _Nonnull)subCategory;
@end


@interface GPHCategory (SWIFT_EXTENSION(GiphyCoreSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end



enum GPHMediaType : NSInteger;
enum GPHRatingType : NSInteger;
enum GPHLanguageType : NSInteger;
@class GPHListMediaResponse;
@class NSOperation;
@class GPHMediaResponse;
@class GPHListCategoryResponse;
@class GPHListTermSuggestionResponse;

/// Entry point into the Swift API.
SWIFT_CLASS("_TtC12GiphyCoreSDK9GPHClient")
@interface GPHClient : GPHAbstractClient
/// Giphy API key.
@property (nonatomic, copy) NSString * _Nonnull apiKey;
/// Initializer
/// \param apiKey Apps api-key to access end-points.
///
- (nonnull instancetype)initWithApiKey:(NSString * _Nonnull)apiKey OBJC_DESIGNATED_INITIALIZER;
/// Perform a search.
/// \param query Search parameters.
///
/// \param media Media type (default: .gif)
///
/// \param offset Offset of results (default: 0)
///
/// \param limit Total hits you request (default: 25)
///
/// \param rating maximum rating of returned content (default R)
///
/// \param lang Language of the content (default English)
///
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nonnull)search:(NSString * _Nonnull)query media:(enum GPHMediaType)media offset:(NSInteger)offset limit:(NSInteger)limit rating:(enum GPHRatingType)rating lang:(enum GPHLanguageType)lang completionHandler:(void (^ _Nonnull)(GPHListMediaResponse * _Nullable, NSError * _Nullable))completionHandler;
/// Trending
/// \param media Media type (default: .gif)
///
/// \param offset offset of results (default: 0)
///
/// \param limit total hits you request (default: 25)
///
/// \param rating maximum rating of returned content (default R)
///
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nonnull)trending:(enum GPHMediaType)media offset:(NSInteger)offset limit:(NSInteger)limit rating:(enum GPHRatingType)rating completionHandler:(void (^ _Nonnull)(GPHListMediaResponse * _Nullable, NSError * _Nullable))completionHandler;
/// Translate
/// \param term term or phrase to translate into a GIF|Sticker
///
/// \param media Media type (default: .gif)
///
/// \param rating maximum rating of returned content (default R)
///
/// \param lang language of the content (default English)
///
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nonnull)translate:(NSString * _Nonnull)term media:(enum GPHMediaType)media rating:(enum GPHRatingType)rating lang:(enum GPHLanguageType)lang completionHandler:(void (^ _Nonnull)(GPHMediaResponse * _Nullable, NSError * _Nullable))completionHandler;
/// Random
/// Example: http://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=cats
/// \param query Search parameters.
///
/// \param media Media type (default: .gif)
///
/// \param rating maximum rating of returned content (default R)
///
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nonnull)random:(NSString * _Nonnull)query media:(enum GPHMediaType)media rating:(enum GPHRatingType)rating completionHandler:(void (^ _Nonnull)(GPHMediaResponse * _Nullable, NSError * _Nullable))completionHandler;
/// GIF by ID
/// \param id GIF ID.
///
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nonnull)gifByID:(NSString * _Nonnull)id completionHandler:(void (^ _Nonnull)(GPHMediaResponse * _Nullable, NSError * _Nullable))completionHandler;
/// GIFs by IDs
/// \param ids array of GIF IDs.
///
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nonnull)gifsByIDs:(NSArray<NSString *> * _Nonnull)ids completionHandler:(void (^ _Nonnull)(GPHListMediaResponse * _Nullable, NSError * _Nullable))completionHandler;
/// Top Categories for GIFs
/// \param offset offset of results (default: 0)
///
/// \param limit total hits you request (default: 25)
///
/// \param sort API-specific sorting convention to use (default: blank)
///
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nonnull)categoriesForGifs:(NSInteger)offset limit:(NSInteger)limit sort:(NSString * _Nonnull)sort completionHandler:(void (^ _Nonnull)(GPHListCategoryResponse * _Nullable, NSError * _Nullable))completionHandler;
/// Sub-Categories for GIFs
/// \param category top category to get sub-categories from
///
/// \param offset offset of results (default: 0)
///
/// \param limit total hits you request (default: 25)
///
/// \param sort API-specific sorting convention to use (default: blank)
///
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nonnull)subCategoriesForGifs:(NSString * _Nonnull)category offset:(NSInteger)offset limit:(NSInteger)limit sort:(NSString * _Nonnull)sort completionHandler:(void (^ _Nonnull)(GPHListCategoryResponse * _Nullable, NSError * _Nullable))completionHandler;
/// Category Content (only works with Sub-categories / top categories won’t return content)
/// \param category top category
///
/// \param subCategory sub-category to get contents from
///
/// \param offset offset of results (default: 0)
///
/// \param limit total hits you request (default: 25)
///
/// \param rating maximum rating of returned content (default R)
///
/// \param lang language of the content (default English)
///
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nonnull)gifsByCategory:(NSString * _Nonnull)category subCategory:(NSString * _Nonnull)subCategory offset:(NSInteger)offset limit:(NSInteger)limit rating:(enum GPHRatingType)rating lang:(enum GPHLanguageType)lang completionHandler:(void (^ _Nonnull)(GPHListMediaResponse * _Nullable, NSError * _Nullable))completionHandler;
/// Term Suggestions
/// \param term Word/Words
///
/// \param completionHandler Completion handler to be notified of the request’s outcome.
///
///
/// returns:
/// A cancellable operation.
- (NSOperation * _Nonnull)termSuggestions:(NSString * _Nonnull)term completionHandler:(void (^ _Nonnull)(GPHListTermSuggestionResponse * _Nullable, NSError * _Nullable))completionHandler;
@end


/// Represents a Giphy Image (GIF/Sticker)
SWIFT_CLASS("_TtC12GiphyCoreSDK8GPHImage")
@interface GPHImage : NSObject <NSCoding>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHImage (SWIFT_EXTENSION(GiphyCoreSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end




/// Represents a Giphy Images (Renditions) for a GPHMedia
SWIFT_CLASS("_TtC12GiphyCoreSDK9GPHImages")
@interface GPHImages : NSObject <NSCoding>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum GPHRenditionType : NSInteger;

@interface GPHImages (SWIFT_EXTENSION(GiphyCoreSDK))
- (GPHImage * _Nullable)rendition:(enum GPHRenditionType)rendition SWIFT_WARN_UNUSED_RESULT;
@end


@interface GPHImages (SWIFT_EXTENSION(GiphyCoreSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end



/// Represents Giphy APIs Supported Languages
typedef SWIFT_ENUM(NSInteger, GPHLanguageType) {
/// We use Int, RawRepresentable to be able to bridge btw ObjC<>Swift without loosing String values.
/// English (en)
  GPHLanguageTypeEnglish = 0,
/// Spanish (es)
  GPHLanguageTypeSpanish = 1,
/// Portuguese (pt)
  GPHLanguageTypePortuguese = 2,
/// Indonesian (id)
  GPHLanguageTypeIndonesian = 3,
/// French (fr)
  GPHLanguageTypeFrench = 4,
/// Arabic (ar)
  GPHLanguageTypeArabic = 5,
/// Turkish (tr)
  GPHLanguageTypeTurkish = 6,
/// Thai (th)
  GPHLanguageTypeThai = 7,
/// Vietnamese (vi)
  GPHLanguageTypeVietnamese = 8,
/// German (de)
  GPHLanguageTypeGerman = 9,
/// Italian (it)
  GPHLanguageTypeItalian = 10,
/// Japanese (ja)
  GPHLanguageTypeJapanese = 11,
/// Chinese Simplified (zh-cn)
  GPHLanguageTypeChineseSimplified = 12,
/// Chinese Traditional (zh-tw)
  GPHLanguageTypeChineseTraditional = 13,
/// Russian (ru)
  GPHLanguageTypeRussian = 14,
/// Korean (ko)
  GPHLanguageTypeKorean = 15,
/// Polish (pl)
  GPHLanguageTypePolish = 16,
/// Dutch (nl)
  GPHLanguageTypeDutch = 17,
/// Romanian (ro)
  GPHLanguageTypeRomanian = 18,
/// Hungarian (hu)
  GPHLanguageTypeHungarian = 19,
/// Swedish (sv)
  GPHLanguageTypeSwedish = 20,
/// Czech (cs)
  GPHLanguageTypeCzech = 21,
/// Hindi (hi)
  GPHLanguageTypeHindi = 22,
/// Bengali (bn)
  GPHLanguageTypeBengali = 23,
/// Danish (da)
  GPHLanguageTypeDanish = 24,
/// Farsi (fa)
  GPHLanguageTypeFarsi = 25,
/// Filipino (tl)
  GPHLanguageTypeFilipino = 26,
/// Finnish (fi)
  GPHLanguageTypeFinnish = 27,
/// Hebrew (iw)
  GPHLanguageTypeHebrew = 28,
/// Malay (ms)
  GPHLanguageTypeMalay = 29,
/// Norwegian (no)
  GPHLanguageTypeNorwegian = 30,
/// Ukrainian (uk)
  GPHLanguageTypeUkrainian = 31,
};


/// Represents a Giphy Response Meta Info
SWIFT_CLASS("_TtC12GiphyCoreSDK11GPHResponse")
@interface GPHResponse : NSObject
/// Initializer
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Represents a Giphy List Category Response (multiple results)
SWIFT_CLASS("_TtC12GiphyCoreSDK23GPHListCategoryResponse")
@interface GPHListCategoryResponse : GPHResponse
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHListCategoryResponse (SWIFT_EXTENSION(GiphyCoreSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end




/// Represents a Giphy List Media Response (multiple results)
SWIFT_CLASS("_TtC12GiphyCoreSDK20GPHListMediaResponse")
@interface GPHListMediaResponse : GPHResponse
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHListMediaResponse (SWIFT_EXTENSION(GiphyCoreSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end




/// Represents a Giphy List Term Suggestions Response (multiple results)
SWIFT_CLASS("_TtC12GiphyCoreSDK29GPHListTermSuggestionResponse")
@interface GPHListTermSuggestionResponse : GPHResponse
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHListTermSuggestionResponse (SWIFT_EXTENSION(GiphyCoreSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end




/// Represents a Giphy Media Object
SWIFT_CLASS("_TtC12GiphyCoreSDK8GPHMedia")
@interface GPHMedia : NSObject <NSCoding>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum GPHRequestType : NSInteger;

@interface GPHMedia (SWIFT_EXTENSION(GiphyCoreSDK))
+ (GPHMedia * _Nullable)mapJSON:(NSDictionary<NSString *, id> * _Nonnull)json request:(enum GPHRequestType)request media:(enum GPHMediaType)media error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


@interface GPHMedia (SWIFT_EXTENSION(GiphyCoreSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end




/// Represents a Giphy Media Response (single result)
SWIFT_CLASS("_TtC12GiphyCoreSDK16GPHMediaResponse")
@interface GPHMediaResponse : GPHResponse
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHMediaResponse (SWIFT_EXTENSION(GiphyCoreSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end



/// Represents a Giphy Object Type (GIF/Sticker/…)
typedef SWIFT_ENUM(NSInteger, GPHMediaType) {
/// We use Int, RawRepresentable to be able to bridge btw ObjC<>Swift without losing String values.
/// Gif Media Type
  GPHMediaTypeGif = 0,
/// Sticker Media Type
  GPHMediaTypeSticker = 1,
};


/// Represents a Giphy Response Meta Info
SWIFT_CLASS("_TtC12GiphyCoreSDK7GPHMeta")
@interface GPHMeta : NSObject
/// Initializer
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHMeta (SWIFT_EXTENSION(GiphyCoreSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end




/// Represents a Giphy Response Pagination Info
SWIFT_CLASS("_TtC12GiphyCoreSDK13GPHPagination")
@interface GPHPagination : NSObject
/// Initializer
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHPagination (SWIFT_EXTENSION(GiphyCoreSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end



/// Represents content rating (y,g, pg, pg-13 or r)
typedef SWIFT_ENUM(NSInteger, GPHRatingType) {
/// We use Int, RawRepresentable to be able to bridge btw ObjC<>Swift without loosing String values.
/// Rated Y
  GPHRatingTypeRatedY = 0,
/// Rated G
  GPHRatingTypeRatedG = 1,
/// Rated PG
  GPHRatingTypeRatedPG = 2,
/// Rated PG-13
  GPHRatingTypeRatedPG13 = 3,
/// Rated R
  GPHRatingTypeRatedR = 4,
/// Not Safe for Work
  GPHRatingTypeNsfw = 5,
/// Unrated
  GPHRatingTypeUnrated = 6,
};

/// Represents a Giphy Rendition Type (Original/Preview/…)
typedef SWIFT_ENUM(NSInteger, GPHRenditionType) {
/// We use Int, RawRepresentable to be able to bridge btw ObjC<>Swift without losing String values.
/// Original file size and file dimensions. Good for desktop use.
  GPHRenditionTypeOriginal = 0,
/// Preview image for original.
  GPHRenditionTypeOriginalStill = 1,
/// File size under 50kb. Duration may be truncated to meet file size requirements. Good for thumbnails and previews.
  GPHRenditionTypePreview = 2,
/// Duration set to loop for 15 seconds. Only recommended for this exact use case.
  GPHRenditionTypeLooping = 3,
/// Height set to 200px. Good for mobile use.
  GPHRenditionTypeFixedHeight = 4,
/// Static preview image for fixed_height
  GPHRenditionTypeFixedHeightStill = 5,
/// Height set to 200px. Reduced to 6 frames to minimize file size to the lowest.
/// Works well for unlimited scroll on mobile and as animated previews. See Giphy.com on mobile web as an example.
  GPHRenditionTypeFixedHeightDownsampled = 6,
/// Height set to 100px. Good for mobile keyboards.
  GPHRenditionTypeFixedHeightSmall = 7,
/// Static preview image for fixed_height_small
  GPHRenditionTypeFixedHeightSmallStill = 8,
/// Width set to 200px. Good for mobile use.
  GPHRenditionTypeFixedWidth = 9,
/// Static preview image for fixed_width
  GPHRenditionTypeFixedWidthStill = 10,
/// Width set to 200px. Reduced to 6 frames. Works well for unlimited scroll on mobile and as animated previews.
  GPHRenditionTypeFixedWidthDownsampled = 11,
/// Width set to 100px. Good for mobile keyboards.
  GPHRenditionTypeFixedWidthSmall = 12,
/// Static preview image for fixed_width_small
  GPHRenditionTypeFixedWidthSmallStill = 13,
/// File size under 2mb.
  GPHRenditionTypeDownsized = 14,
/// File size under 200kb.
  GPHRenditionTypeDownsizedSmall = 15,
/// File size under 5mb.
  GPHRenditionTypeDownsizedMedium = 16,
/// File size under 8mb.
  GPHRenditionTypeDownsizedLarge = 17,
/// Static preview image for downsized.
  GPHRenditionTypeDownsizedStill = 18,
};

/// Represents a Giphy URLRequest Type
typedef SWIFT_ENUM(NSInteger, GPHRequestType) {
/// Search Request.
  GPHRequestTypeSearch = 0,
/// Trending Request.
  GPHRequestTypeTrending = 1,
/// Translate Request.
  GPHRequestTypeTranslate = 2,
/// Random Item Request.
  GPHRequestTypeRandom = 3,
/// Get an Item with ID.
  GPHRequestTypeGet = 4,
/// Get items with IDs.
  GPHRequestTypeGetAll = 5,
/// Get Term Suggestions.
  GPHRequestTypeTermSuggestions = 6,
/// Top Categories.
  GPHRequestTypeCategories = 7,
/// SubCategories of a Category.
  GPHRequestTypeSubCategories = 8,
/// Category Content.
  GPHRequestTypeCategoryContent = 9,
};



@interface GPHResponse (SWIFT_EXTENSION(GiphyCoreSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// Represents a Giphy Term Suggestion
SWIFT_CLASS("_TtC12GiphyCoreSDK17GPHTermSuggestion")
@interface GPHTermSuggestion : NSObject <NSCoding>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHTermSuggestion (SWIFT_EXTENSION(GiphyCoreSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end




/// Represents a Giphy User Object
/// http://api.giphy.com/v1/gifs/categories/animals/cats?api_key=4OMJYpPoYwVpe
SWIFT_CLASS("_TtC12GiphyCoreSDK7GPHUser")
@interface GPHUser : NSObject <NSCoding>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface GPHUser (SWIFT_EXTENSION(GiphyCoreSDK))
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end



#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
